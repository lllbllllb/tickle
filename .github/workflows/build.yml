# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on: [push]

env:
  IMAGE_NAME: github-tickle-tmp-image

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Build with Maven
      run: mvn -B install --file pom.xml
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build a container image from our Spring Boot app using Paketo.io / Cloud Native Build Packs
      run: |
        cd ./tickle-runner/
        mvn spring-boot:build-image -Dspring-boot.build-image.imageName=$IMAGE_NAME
    - name: Set Release version env variable
      run: |
        echo "RELEASE_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV
    - name: Publish to Docker Hub
      run: |
        docker tag $IMAGE_NAME mbllllb/tickle:latest
        docker tag $IMAGE_NAME mbllllb/tickle:${{env.RELEASE_VERSION}}
        docker push mbllllb/tickle:latest
        docker push mbllllb/tickle:${{env.RELEASE_VERSION}}
